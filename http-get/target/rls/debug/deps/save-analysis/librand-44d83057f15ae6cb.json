{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6","program":"C:\\Users\\syaki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rand","C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"libc\"","--cfg","feature=\"std\"","-C","metadata=44d83057f15ae6cb","-C","extra-filename=-44d83057f15ae6cb","--out-dir","C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps","-L","dependency=C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps","--extern","winapi=C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps\\libwinapi-0426dc05ae6fb789.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\syaki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps\\librand-44d83057f15ae6cb.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[11996584385124375644,2562642718189209733]},"crate_root":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src","external_crates":[{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9427977260301951124,12109955124372957148]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3215774421958443461,317753073875096730]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17224083688818874547,9559482936290031731]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18091163727436317975,11782788917893645886]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16923134524453488966,338877121959128963]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15556092502619809596,16433112589117741866]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8626296931894420134,1165415804249109730]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8665569488257896457,16725777632752238541]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8306516236845206973,10531989379467649303]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17140567284527794716,6707285123185935984]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[2371002302899812892,10236220743892507345]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7397349612947417879,16190381825946466186]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9949890438130053664,8357565210831989746]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","num":14,"id":{"name":"winapi","disambiguator":[18235309627603785207,444305948932184888]}}],"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":472,"byte_end":39222,"line_start":11,"line_end":1220,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9895,"byte_end":9904,"line_start":266,"line_end":266,"column_start":17,"column_end":26},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9940,"byte_end":9945,"line_start":267,"line_end":267,"column_start":35,"column_end":40},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9979,"byte_end":9987,"line_start":270,"line_end":270,"column_start":17,"column_end":25},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9989,"byte_end":9999,"line_start":270,"line_end":270,"column_start":27,"column_end":37},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10018,"byte_end":10027,"line_start":271,"line_end":271,"column_start":17,"column_end":26},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10043,"byte_end":10054,"line_start":272,"line_end":272,"column_start":15,"column_end":26},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40190,"byte_end":40195,"line_start":24,"line_end":24,"column_start":22,"column_end":27},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40241,"byte_end":40246,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"alias_span":null,"name":"Gamma","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40248,"byte_end":40258,"line_start":26,"line_end":26,"column_start":30,"column_end":40},"alias_span":null,"name":"ChiSquared","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40260,"byte_end":40267,"line_start":26,"line_end":26,"column_start":42,"column_end":49},"alias_span":null,"name":"FisherF","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40269,"byte_end":40277,"line_start":26,"line_end":26,"column_start":51,"column_end":59},"alias_span":null,"name":"StudentT","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40325,"byte_end":40331,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Normal","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40333,"byte_end":40342,"line_start":28,"line_end":28,"column_start":32,"column_end":41},"alias_span":null,"name":"LogNormal","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40394,"byte_end":40397,"line_start":30,"line_end":30,"column_start":28,"column_end":31},"alias_span":null,"name":"Exp","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10682,"byte_end":10691,"line_start":294,"line_end":294,"column_start":19,"column_end":28},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10773,"byte_end":10781,"line_start":298,"line_end":298,"column_start":20,"column_end":28},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10783,"byte_end":10793,"line_start":298,"line_end":298,"column_start":30,"column_end":40},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\mod.rs","byte_start":188652,"byte_end":188661,"line_start":48,"line_end":48,"column_start":23,"column_end":32},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\mod.rs","byte_start":188753,"byte_end":188764,"line_start":51,"line_end":51,"column_start":25,"column_end":36},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":475}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":472,"byte_end":39222,"line_start":11,"line_end":1220,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":238},{"krate":0,"index":302},{"krate":0,"index":345},{"krate":0,"index":362},{"krate":0,"index":393},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":421},{"krate":0,"index":475},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":654},{"krate":0,"index":662},{"krate":0,"index":1353},{"krate":0,"index":1359},{"krate":0,"index":669},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":675},{"krate":0,"index":681},{"krate":0,"index":1372},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1392},{"krate":0,"index":1390},{"krate":0,"index":1388},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":694},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":1397},{"krate":0,"index":1401},{"krate":0,"index":1399},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":707}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":9268,"byte_end":9307,"line_start":244,"line_end":244,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":68},{"krate":0,"index":127},{"krate":0,"index":159},{"krate":0,"index":182},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":891},{"krate":0,"index":901},{"krate":0,"index":898},{"krate":0,"index":895},{"krate":0,"index":903},{"krate":0,"index":908},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":233}],"decl_id":null,"docs":" Sampling from random distributions.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::distributions::range","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":712},{"krate":0,"index":722},{"krate":0,"index":720},{"krate":0,"index":717},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":725},{"krate":0,"index":729},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":741},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":761},{"krate":0,"index":67},{"krate":0,"index":765},{"krate":0,"index":769}],"decl_id":null,"docs":" Generating numbers between two others.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55490,"byte_end":55495,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Range","qualname":"::distributions::range::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55719,"byte_end":55722,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Range<X>>::new","value":"fn (low: X, high: X) -> Range<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Range` instance that samples uniformly from\n `[low, high)`. Panics if `low >= high`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56381,"byte_end":56392,"line_start":78,"line_end":78,"column_start":11,"column_end":22},"name":"SampleRange","qualname":"::distributions::range::SampleRange","value":"SampleRange: Sized","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" The helper trait for types that have a sensible way to sample\n uniformly between two values. This should not be used directly,\n and is only to facilitate `Range`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56652,"byte_end":56667,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"construct_range","qualname":"::distributions::range::SampleRange::construct_range","value":"fn (low: Self, high: Self) -> Range<Self>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Construct the `Range` object that `sample_range`\n requires. This should not ever be called directly, only via\n `Range::new`, which will check that `low < high`, so this\n function doesn't have to repeat the check.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56817,"byte_end":56829,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"sample_range","qualname":"::distributions::range::SampleRange::sample_range","value":"fn <R> (r: &Range<Self>, rng: &mut R) -> Self","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Sample a value from the given `Range` with the given `Rng` as\n a source of randomness.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gamma","qualname":"::distributions::gamma","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":773},{"krate":0,"index":778},{"krate":0,"index":777},{"krate":0,"index":775},{"krate":0,"index":780},{"krate":0,"index":793},{"krate":0,"index":792},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":801},{"krate":0,"index":800},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":810},{"krate":0,"index":809},{"krate":0,"index":807},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":812},{"krate":0,"index":817},{"krate":0,"index":816},{"krate":0,"index":814},{"krate":0,"index":819},{"krate":0,"index":828},{"krate":0,"index":827},{"krate":0,"index":825},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":830},{"krate":0,"index":837},{"krate":0,"index":836},{"krate":0,"index":834},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":839},{"krate":0,"index":845},{"krate":0,"index":844},{"krate":0,"index":842},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":124}],"decl_id":null,"docs":" The Gamma and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40415,"byte_end":40436,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":63735,"byte_end":63740,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Gamma","qualname":"::distributions::gamma::Gamma","value":"Gamma {  }","parent":null,"children":[{"krate":0,"index":774}],"decl_id":null,"docs":" The Gamma distribution `Gamma(shape, scale)` distribution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65025,"byte_end":65028,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Gamma>::new","value":"fn (shape: f64, scale: f64) -> Gamma","parent":null,"children":[],"decl_id":null,"docs":" Construct an object representing the `Gamma(shape, scale)`\n distribution.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65004,"byte_end":65013,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68074,"byte_end":68084,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"ChiSquared","qualname":"::distributions::gamma::ChiSquared","value":"ChiSquared {  }","parent":null,"children":[{"krate":0,"index":813}],"decl_id":null,"docs":" The chi-squared distribution `χ²(k)`, where `k` is the degrees of\n freedom.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68550,"byte_end":68553,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<ChiSquared>::new","value":"fn (k: f64) -> ChiSquared","parent":null,"children":[],"decl_id":null,"docs":" Create a new chi-squared distribution with degrees-of-freedom\n `k`. Panics if `k < 0`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":69811,"byte_end":69818,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"FisherF","qualname":"::distributions::gamma::FisherF","value":"FisherF {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" The Fisher F distribution `F(m, n)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70153,"byte_end":70156,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"new","qualname":"<FisherF>::new","value":"fn (m: f64, n: f64) -> FisherF","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FisherF` distribution, with the given\n parameter. Panics if either `m` or `n` are not positive.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71117,"byte_end":71125,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"StudentT","qualname":"::distributions::gamma::StudentT","value":"StudentT {  }","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" The Student t distribution, `t(nu)`, where `nu` is the degrees of\n freedom.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71293,"byte_end":71296,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<StudentT>::new","value":"fn (n: f64) -> StudentT","parent":null,"children":[],"decl_id":null,"docs":" Create a new Student t distribution with `n` degrees of\n freedom. Panics if `n <= 0`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"normal","qualname":"::distributions::normal","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":847},{"krate":0,"index":853},{"krate":0,"index":852},{"krate":0,"index":850},{"krate":0,"index":137},{"krate":0,"index":855},{"krate":0,"index":861},{"krate":0,"index":860},{"krate":0,"index":858},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":863},{"krate":0,"index":868},{"krate":0,"index":867},{"krate":0,"index":865},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156}],"decl_id":null,"docs":" The normal and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40452,"byte_end":40473,"line_start":35,"line_end":35,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74471,"byte_end":74485,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"StandardNormal","qualname":"::distributions::normal::StandardNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around an `f64` to generate N(0, 1) random numbers\n (a.k.a.  a standard normal, or Gaussian).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76164,"byte_end":76170,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"Normal","qualname":"::distributions::normal::Normal","value":"Normal {  }","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"decl_id":null,"docs":" The normal distribution `N(mean, std_dev**2)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76412,"byte_end":76415,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Normal>::new","value":"fn (mean: f64, std_dev: f64) -> Normal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Normal` distribution with the given mean and\n standard deviation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76391,"byte_end":76400,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77432,"byte_end":77441,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"LogNormal","qualname":"::distributions::normal::LogNormal","value":"LogNormal {  }","parent":null,"children":[{"krate":0,"index":864}],"decl_id":null,"docs":" The log-normal distribution `ln N(mean, std_dev**2)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77673,"byte_end":77676,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<LogNormal>::new","value":"fn (mean: f64, std_dev: f64) -> LogNormal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LogNormal` distribution with the given mean\n and standard deviation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77652,"byte_end":77661,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exponential","qualname":"::distributions::exponential","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":875},{"krate":0,"index":873},{"krate":0,"index":168},{"krate":0,"index":878},{"krate":0,"index":883},{"krate":0,"index":882},{"krate":0,"index":880},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179}],"decl_id":null,"docs":" The exponential distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40490,"byte_end":40511,"line_start":37,"line_end":37,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80232,"byte_end":80236,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Exp1","qualname":"::distributions::exponential::Exp1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around an `f64` to generate Exp(1) random numbers.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81239,"byte_end":81242,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"Exp","qualname":"::distributions::exponential::Exp","value":"Exp {  }","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" The exponential distribution `Exp(lambda)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81483,"byte_end":81486,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Exp>::new","value":"fn (lambda: f64) -> Exp","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Exp` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81462,"byte_end":81471,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40657,"byte_end":40663,"line_start":44,"line_end":44,"column_start":11,"column_end":17},"name":"Sample","qualname":"::distributions::Sample","value":"Sample<Support>","parent":null,"children":[{"krate":0,"index":197}],"decl_id":null,"docs":" Types that can be used to create a random instance of `Support`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40777,"byte_end":40783,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Sample::sample","value":"fn <R> (&mut self, rng: &mut R) -> Support","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Generate a random value of `Support`, using `rng` as the\n source of randomness.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41249,"byte_end":41266,"line_start":58,"line_end":58,"column_start":11,"column_end":28},"name":"IndependentSample","qualname":"::distributions::IndependentSample","value":"IndependentSample<Support>: Sample<Support>","parent":null,"children":[{"krate":0,"index":201}],"decl_id":null,"docs":" `Sample`s that do not require keeping track of state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41335,"byte_end":41345,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"ind_sample","qualname":"::distributions::IndependentSample::ind_sample","value":"fn <R> (&self, &mut R) -> Support","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Generate a random value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41520,"byte_end":41530,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"RandSample","qualname":"::distributions::RandSample","value":"RandSample {  }","parent":null,"children":[{"krate":0,"index":887}],"decl_id":null,"docs":" A wrapper for generating types that implement `Rand` via the\n `Sample` & `IndependentSample` traits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42018,"byte_end":42021,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<RandSample<Sup>>::new","value":"fn () -> RandSample<Sup>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42215,"byte_end":42223,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"Weighted","qualname":"::distributions::Weighted","value":"Weighted { weight, item }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"decl_id":null,"docs":" A value with a particular weight for use with `WeightedChoice`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42279,"byte_end":42285,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"weight","qualname":"::distributions::Weighted::weight","value":"u32","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":" The numerical weight of this item\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":42348,"byte_end":42352,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"item","qualname":"::distributions::Weighted::item","value":"T","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":" The actual item which is being weighted\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43346,"byte_end":43360,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"WeightedChoice","qualname":"::distributions::WeightedChoice","value":"WeightedChoice {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" A distribution that selects from a finite collection of weighted items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43689,"byte_end":43692,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedChoice>::new","value":"fn (items: &'a mut [Weighted<T>]) -> WeightedChoice<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WeightedChoice`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jitter","qualname":"::jitter","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":262},{"krate":0,"index":912},{"krate":0,"index":931},{"krate":0,"index":929},{"krate":0,"index":927},{"krate":0,"index":925},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":296}],"decl_id":null,"docs":" Non-physical true random number generator based on timing jitter.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":109410,"byte_end":109419,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"JitterRng","qualname":"::jitter::JitterRng","value":"JitterRng {  }","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261}],"decl_id":null,"docs":" A true random number generator based on jitter in the CPU execution time,\n and jitter in memory access time.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110265,"byte_end":110272,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"NoTimer","qualname":"::jitter::TimerError::NoTimer","value":"TimerError::NoTimer","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" No timer available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110332,"byte_end":110343,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"CoarseTimer","qualname":"::jitter::TimerError::CoarseTimer","value":"TimerError::CoarseTimer","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Timer too coarse to use as an entropy source.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110396,"byte_end":110408,"line_start":83,"line_end":83,"column_start":5,"column_end":17},"name":"NotMonotonic","qualname":"::jitter::TimerError::NotMonotonic","value":"TimerError::NotMonotonic","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Timer is not monotonically increasing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110462,"byte_end":110477,"line_start":85,"line_end":85,"column_start":5,"column_end":20},"name":"TinyVariantions","qualname":"::jitter::TimerError::TinyVariantions","value":"TimerError::TinyVariantions","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Variations of deltas of time too small.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110545,"byte_end":110557,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"TooManyStuck","qualname":"::jitter::TimerError::TooManyStuck","value":"TimerError::TooManyStuck","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Too many stuck results (indicating no added entropy).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110582,"byte_end":110597,"line_start":89,"line_end":89,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::jitter::TimerError::__Nonexhaustive","value":"TimerError::__Nonexhaustive","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110220,"byte_end":110230,"line_start":77,"line_end":77,"column_start":10,"column_end":20},"name":"TimerError","qualname":"::jitter::TimerError","value":"TimerError::{NoTimer, CoarseTimer, NotMonotonic, TinyVariantions, TooManyStuck, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923}],"decl_id":null,"docs":" An error that can occur when `test_timer` fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111857,"byte_end":111860,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<JitterRng>::new","value":"fn () -> Result<JitterRng, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n Makes use of `std::time` for a timer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111824,"byte_end":111845,"line_start":129,"line_end":129,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":112794,"byte_end":112808,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"new_with_timer","qualname":"<JitterRng>::new_with_timer","value":"fn (timer: fn() -> u64) -> JitterRng","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n A custom timer can be supplied, making it possible to use `JitterRng` in\n `no_std` environments.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":114070,"byte_end":114080,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"set_rounds","qualname":"<JitterRng>::set_rounds","value":"fn (&mut self, rounds: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures how many rounds are used to generate each 64-bit value.\n This must be greater than zero, and has a big impact on performance\n and output quality.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":124827,"byte_end":124837,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"test_timer","qualname":"<JitterRng>::test_timer","value":"fn (&mut self) -> Result<u32, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Basic quality tests on the timer, by measuring CPU timing jitter a few\n hundred times.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134558,"byte_end":134569,"line_start":656,"line_end":656,"column_start":12,"column_end":23},"name":"timer_stats","qualname":"<JitterRng>::timer_stats","value":"fn (&mut self, var_rounds: bool) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Statistical test: return the timer delta of one normal run of the\n `JitterEntropy` entropy collector.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":134525,"byte_end":134546,"line_start":655,"line_end":655,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":327}],"decl_id":null,"docs":" Interfaces to the operating system provided random number\n generators.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10374,"byte_end":10395,"line_start":286,"line_end":286,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139378,"byte_end":139383,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"OsRng","qualname":"::os::OsRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that retrieves randomness straight from\n the operating system. Platform sources:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139452,"byte_end":139455,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<OsRng>::new","value":"fn () -> io::Result<OsRng>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OsRng`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":361}],"decl_id":null,"docs":" A wrapper around any Read to treat it as an RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10408,"byte_end":10429,"line_start":287,"line_end":287,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157321,"byte_end":157328,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ReadRng","qualname":"::read::ReadRng","value":"ReadRng {  }","parent":null,"children":[{"krate":0,"index":939}],"decl_id":null,"docs":" An RNG that reads random bytes straight from a `Read`. This will\n work best with an infinite reader, but this is not required.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157435,"byte_end":157438,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadRng<R>>::new","value":"fn (r: R) -> ReadRng<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReadRng` from a `Read`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reseeding","qualname":"::reseeding","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":943},{"krate":0,"index":950},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":379},{"krate":0,"index":385},{"krate":0,"index":954},{"krate":0,"index":959},{"krate":0,"index":958},{"krate":0,"index":956},{"krate":0,"index":388},{"krate":0,"index":391}],"decl_id":null,"docs":" A wrapper around another RNG that reseeds it after it\n generates a certain number of random bytes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160811,"byte_end":160823,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"ReseedingRng","qualname":"::reseeding::ReseedingRng","value":"ReseedingRng { reseeder }","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"decl_id":null,"docs":" A wrapper around any RNG which reseeds the underlying RNG after it\n has generated a certain number of random bytes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":160967,"byte_end":160975,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"reseeder","qualname":"::reseeding::ReseedingRng::reseeder","value":"Rsdr","parent":{"krate":0,"index":943},"children":[],"decl_id":null,"docs":" Controls the behaviour when reseeding the RNG.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161349,"byte_end":161352,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<ReseedingRng<R, Rsdr>>::new","value":"fn (rng: R, generation_threshold: u64, reseeder: Rsdr) -> ReseedingRng<R, Rsdr>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReseedingRng` with the given parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161732,"byte_end":161751,"line_start":52,"line_end":52,"column_start":12,"column_end":31},"name":"reseed_if_necessary","qualname":"<ReseedingRng<R, Rsdr>>::reseed_if_necessary","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reseed the internal RNG if the number of bytes that have been\n generated exceed the threshold.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":163983,"byte_end":163991,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"name":"Reseeder","qualname":"::reseeding::Reseeder","value":"Reseeder<R>","parent":null,"children":[{"krate":0,"index":387}],"decl_id":null,"docs":" Something that can be used to reseed an RNG via `ReseedingRng`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164034,"byte_end":164040,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"reseed","qualname":"::reseeding::Reseeder::reseed","value":"fn (&mut self, rng: &mut R) -> ()","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Reseed the given RNG.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164240,"byte_end":164257,"line_start":137,"line_end":137,"column_start":12,"column_end":29},"name":"ReseedWithDefault","qualname":"::reseeding::ReseedWithDefault","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reseed an RNG using a `Default` instance. This reseeds by\n replacing the RNG with the result of a `Default::default` call.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"seq","qualname":"::seq","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413}],"decl_id":null,"docs":" Functions for randomly accessing and sampling sequences.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"std\", feature = \"alloc\"))","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10463,"byte_end":10508,"line_start":289,"line_end":289,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":168349,"byte_end":168360,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::seq::sample_iter","value":"fn <T, I, R> (rng: &mut R, iterable: I, amount: usize) -> Result<Vec<T>, Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample `amount` elements from a finite iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":169732,"byte_end":169744,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"sample_slice","qualname":"::seq::sample_slice","value":"fn <R, T> (rng: &mut R, slice: &[T], amount: usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` values from `slice`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":170474,"byte_end":170490,"line_start":114,"line_end":114,"column_start":8,"column_end":24},"name":"sample_slice_ref","qualname":"::seq::sample_slice_ref","value":"fn <'a, R, T> (rng: &mut R, slice: &'a [T], amount: usize) -> Vec<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` references from `slice`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\seq.rs","byte_start":171149,"byte_end":171163,"line_start":134,"line_end":134,"column_start":8,"column_end":22},"name":"sample_indices","qualname":"::seq::sample_indices","value":"fn <R> (rng: &mut R, length: usize, amount: usize) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` indices from `0..length`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10611,"byte_end":10617,"line_start":292,"line_end":292,"column_start":9,"column_end":15},"name":"chacha","qualname":"::chacha","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":416}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10703,"byte_end":10708,"line_start":296,"line_end":296,"column_start":9,"column_end":14},"name":"isaac","qualname":"::isaac","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":418}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":190030,"byte_end":190039,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"ChaChaRng","qualname":"::prng::chacha::ChaChaRng","value":"ChaChaRng {  }","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310}],"decl_id":null,"docs":" A random number generator that uses the ChaCha20 algorithm [1].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192130,"byte_end":192142,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<ChaChaRng>::new_unseeded","value":"fn () -> ChaChaRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ChaCha random number generator using the default\n fixed key of 8 zero words.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":192976,"byte_end":192987,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"set_counter","qualname":"<ChaChaRng>::set_counter","value":"fn (&mut self, counter_low: u64, counter_high: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the internal 128-bit ChaCha counter to\n a user-provided value. This permits jumping\n arbitrarily ahead (or backwards) in the pseudorandom stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":200851,"byte_end":200859,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"IsaacRng","qualname":"::prng::isaac::IsaacRng","value":"IsaacRng {  }","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326}],"decl_id":null,"docs":" A random number generator that uses the ISAAC algorithm[1].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201246,"byte_end":201258,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<IsaacRng>::new_unseeded","value":"fn () -> IsaacRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using the default\n fixed seed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211175,"byte_end":211185,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"Isaac64Rng","qualname":"::prng::isaac64::Isaac64Rng","value":"Isaac64Rng {  }","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338}],"decl_id":null,"docs":" A random number generator that uses ISAAC-64[1], the 64-bit\n variant of the ISAAC algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211576,"byte_end":211588,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<Isaac64Rng>::new_unseeded","value":"fn () -> Isaac64Rng","parent":null,"children":[],"decl_id":null,"docs":" Create a 64-bit ISAAC random number generator using the\n default fixed seed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222208,"byte_end":222219,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"XorShiftRng","qualname":"::prng::xorshift::XorShiftRng","value":"XorShiftRng {  }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"decl_id":null,"docs":" An Xorshift[1] random number\n generator.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222134,"byte_end":222172,"line_start":26,"line_end":26,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222647,"byte_end":222659,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<XorShiftRng>::new_unseeded","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Creates a new XorShiftRng instance which is not seeded.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12435,"byte_end":12439,"line_start":338,"line_end":338,"column_start":11,"column_end":15},"name":"Rand","qualname":"::Rand","value":"Rand: Sized","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" A type that can be randomly generated using an `Rng`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12556,"byte_end":12560,"line_start":341,"line_end":341,"column_start":8,"column_end":12},"name":"rand","qualname":"::Rand::rand","value":"fn <R> (rng: &mut R) -> Self","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Generates a random instance of this type using the specified source of\n randomness.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12635,"byte_end":12638,"line_start":345,"line_end":345,"column_start":11,"column_end":14},"name":"Rng","qualname":"::Rng","value":"Rng","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652}],"decl_id":null,"docs":" A random number generator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12862,"byte_end":12870,"line_start":351,"line_end":351,"column_start":8,"column_end":16},"name":"next_u32","qualname":"::Rng::next_u32","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random u32.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":13211,"byte_end":13219,"line_start":359,"line_end":359,"column_start":8,"column_end":16},"name":"next_u64","qualname":"::Rng::next_u64","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random u64.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":14619,"byte_end":14627,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"next_f32","qualname":"::Rng::next_f32","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random f32 selected from the half-open\n interval `[0, 1)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":15375,"byte_end":15383,"line_start":407,"line_end":407,"column_start":8,"column_end":16},"name":"next_f64","qualname":"::Rng::next_f64","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random f64 selected from the half-open\n interval `[0, 1)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":16701,"byte_end":16711,"line_start":442,"line_end":442,"column_start":8,"column_end":18},"name":"fill_bytes","qualname":"::Rng::fill_bytes","value":"fn (&mut self, dest: &mut [u8]) -> ()","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Fill `dest` with random data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17915,"byte_end":17918,"line_start":479,"line_end":479,"column_start":8,"column_end":11},"name":"gen","qualname":"::Rng::gen","value":"fn <T> (&mut self) -> T","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a random value of a `Rand` type.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":17890,"byte_end":17907,"line_start":478,"line_end":478,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":18464,"byte_end":18472,"line_start":497,"line_end":497,"column_start":8,"column_end":16},"name":"gen_iter","qualname":"::Rng::gen_iter","value":"fn <'a, T> (&'a mut self) -> Generator<'a, T, Self>","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return an iterator that will yield an infinite number of randomly\n generated items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19360,"byte_end":19369,"line_start":524,"line_end":524,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::Rng::gen_range","value":"fn <T> (&mut self, low: T, high: T) -> T","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Generate a random value in the range [`low`, `high`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":19827,"byte_end":19844,"line_start":539,"line_end":539,"column_start":8,"column_end":25},"name":"gen_weighted_bool","qualname":"::Rng::gen_weighted_bool","value":"fn (&mut self, n: u32) -> bool","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a bool with a 1 in n chance of true","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20233,"byte_end":20248,"line_start":553,"line_end":553,"column_start":8,"column_end":23},"name":"gen_ascii_chars","qualname":"::Rng::gen_ascii_chars","value":"fn <'a> (&'a mut self) -> AsciiGenerator<'a, Self>","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return an iterator of random characters from the set A-Z,a-z,0-9.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":20749,"byte_end":20755,"line_start":571,"line_end":571,"column_start":8,"column_end":14},"name":"choose","qualname":"::Rng::choose","value":"fn <'a, T> (&mut self, values: &'a [T]) -> Option<&'a T>","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a random element from `values`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21096,"byte_end":21106,"line_start":582,"line_end":582,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::Rng::choose_mut","value":"fn <'a, T> (&mut self, values: &'a mut [T]) -> Option<&'a mut T>","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a mutable pointer to a random element from `values`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":21913,"byte_end":21920,"line_start":608,"line_end":608,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::Rng::shuffle","value":"fn <T> (&mut self, values: &mut [T]) -> ()","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23353,"byte_end":23362,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358}],"decl_id":null,"docs":" Iterator which will generate a stream of random items.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23877,"byte_end":23891,"line_start":691,"line_end":691,"column_start":12,"column_end":26},"name":"AsciiGenerator","qualname":"::AsciiGenerator","value":"AsciiGenerator {  }","parent":null,"children":[{"krate":0,"index":1367}],"decl_id":null,"docs":" Iterator which will continuously generate random ascii characters.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24420,"byte_end":24431,"line_start":709,"line_end":709,"column_start":11,"column_end":22},"name":"SeedableRng","qualname":"::SeedableRng","value":"SeedableRng<Seed>: Rng","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" A random number generator that can be explicitly seeded to produce\n the same stream of randomness multiple times.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24830,"byte_end":24836,"line_start":723,"line_end":723,"column_start":8,"column_end":14},"name":"reseed","qualname":"::SeedableRng::reseed","value":"fn (&mut self, Seed) -> ()","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Reseed an RNG with the given seed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25167,"byte_end":25176,"line_start":736,"line_end":736,"column_start":8,"column_end":17},"name":"from_seed","qualname":"::SeedableRng::from_seed","value":"fn (seed: Seed) -> Self","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Create a new RNG with the given seed.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":25668,"byte_end":25674,"line_start":754,"line_end":754,"column_start":12,"column_end":18},"name":"Open01","qualname":"::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for generating floating point numbers uniformly in the\n open interval `(0,1)` (not including either endpoint).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26158,"byte_end":26166,"line_start":772,"line_end":772,"column_start":12,"column_end":20},"name":"Closed01","qualname":"::Closed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for generating floating point numbers uniformly in the\n closed interval `[0,1]` (including both endpoints).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26304,"byte_end":26310,"line_start":777,"line_end":777,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::StdRng","value":"StdRng {  }","parent":null,"children":[{"krate":0,"index":1387}],"decl_id":null,"docs":" The standard RNG. This is designed to be efficient on the current\n platform.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26946,"byte_end":26949,"line_start":794,"line_end":794,"column_start":12,"column_end":15},"name":"new","qualname":"<StdRng>::new","value":"fn () -> io::Result<StdRng>","parent":null,"children":[],"decl_id":null,"docs":" Create a randomly seeded instance of `StdRng`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26913,"byte_end":26934,"line_start":793,"line_end":793,"column_start":5,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28338,"byte_end":28346,"line_start":842,"line_end":842,"column_start":8,"column_end":16},"name":"weak_rng","qualname":"::weak_rng","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Create a weak random number generator with a default algorithm and seed.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28309,"byte_end":28330,"line_start":841,"line_end":841,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29024,"byte_end":29033,"line_start":868,"line_end":868,"column_start":12,"column_end":21},"name":"ThreadRng","qualname":"::ThreadRng","value":"ThreadRng {  }","parent":null,"children":[{"krate":0,"index":1398}],"decl_id":null,"docs":" The thread-local RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28967,"byte_end":28988,"line_start":866,"line_end":866,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29774,"byte_end":29784,"line_start":885,"line_end":885,"column_start":8,"column_end":18},"name":"thread_rng","qualname":"::thread_rng","value":"fn () -> ThreadRng","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the lazily-initialized thread-local random number\n generator, seeded by the system. Intended to be used in method\n chaining style, e.g. `thread_rng().gen::<i32>()`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":29745,"byte_end":29766,"line_start":884,"line_end":884,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31783,"byte_end":31789,"line_start":961,"line_end":961,"column_start":8,"column_end":14},"name":"random","qualname":"::random","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Generates a random value using the thread-local random number generator.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31744,"byte_end":31765,"line_start":959,"line_end":959,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":31766,"byte_end":31775,"line_start":960,"line_end":960,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32311,"byte_end":32317,"line_start":982,"line_end":982,"column_start":8,"column_end":14},"name":"sample","qualname":"::sample","value":"fn <T, I, R> (rng: &mut R, iterable: I, amount: usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use `seq::sample_iter` instead.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32199,"byte_end":32220,"line_start":979,"line_end":979,"column_start":1,"column_end":22}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32221,"byte_end":32238,"line_start":980,"line_end":980,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.4.0\", note = \"renamed to seq::sample_iter\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":32239,"byte_end":32303,"line_start":981,"line_end":981,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55583,"byte_end":55588,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55919,"byte_end":55924,"line_start":65,"line_end":65,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56076,"byte_end":56081,"line_start":69,"line_end":69,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64847,"byte_end":64852,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65494,"byte_end":65509,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65727,"byte_end":65742,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65984,"byte_end":65989,"line_start":136,"line_end":136,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66093,"byte_end":66108,"line_start":139,"line_end":139,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66212,"byte_end":66227,"line_start":142,"line_end":142,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66343,"byte_end":66348,"line_start":146,"line_end":146,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66621,"byte_end":66636,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66851,"byte_end":66866,"line_start":162,"line_end":162,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68424,"byte_end":68434,"line_start":214,"line_end":214,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68851,"byte_end":68861,"line_start":227,"line_end":227,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68976,"byte_end":68986,"line_start":230,"line_end":230,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70007,"byte_end":70014,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70475,"byte_end":70482,"line_start":281,"line_end":281,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70597,"byte_end":70604,"line_start":284,"line_end":284,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71170,"byte_end":71178,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71497,"byte_end":71505,"line_start":319,"line_end":319,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71620,"byte_end":71628,"line_start":322,"line_end":322,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74511,"byte_end":74525,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76214,"byte_end":76220,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76636,"byte_end":76642,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76757,"byte_end":76763,"line_start":116,"line_end":116,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77469,"byte_end":77478,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77878,"byte_end":77887,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":78002,"byte_end":78011,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80333,"byte_end":80337,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81348,"byte_end":81351,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81653,"byte_end":81656,"line_start":90,"line_end":90,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81771,"byte_end":81774,"line_start":93,"line_end":93,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41607,"byte_end":41617,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41646,"byte_end":41656,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41737,"byte_end":41747,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41879,"byte_end":41889,"line_start":79,"line_end":79,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41989,"byte_end":41999,"line_start":85,"line_end":85,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43458,"byte_end":43472,"line_start":131,"line_end":131,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":44869,"byte_end":44883,"line_start":168,"line_end":168,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":45016,"byte_end":45030,"line_start":172,"line_end":172,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110003,"byte_end":110012,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110607,"byte_end":110617,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111105,"byte_end":111115,"line_start":105,"line_end":105,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111281,"byte_end":111291,"line_start":112,"line_end":112,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111489,"byte_end":111498,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":136720,"byte_end":136729,"line_start":717,"line_end":717,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139403,"byte_end":139408,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139540,"byte_end":139545,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139751,"byte_end":139756,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150064,"byte_end":150069,"line_start":437,"line_end":437,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150172,"byte_end":150177,"line_start":443,"line_end":443,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157365,"byte_end":157372,"line_start":38,"line_end":38,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157542,"byte_end":157549,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161018,"byte_end":161030,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161975,"byte_end":161987,"line_start":61,"line_end":61,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":162549,"byte_end":162561,"line_start":82,"line_end":82,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164299,"byte_end":164316,"line_start":139,"line_end":139,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164419,"byte_end":164436,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\rand_impls.rs","byte_start":184507,"byte_end":184513,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191522,"byte_end":191531,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195147,"byte_end":195156,"line_start":188,"line_end":188,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195431,"byte_end":195440,"line_start":201,"line_end":201,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":196072,"byte_end":196081,"line_start":224,"line_end":224,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201137,"byte_end":201145,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205258,"byte_end":205266,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205339,"byte_end":205347,"line_start":195,"line_end":195,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":206177,"byte_end":206185,"line_start":219,"line_end":219,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207146,"byte_end":207154,"line_start":248,"line_end":248,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207593,"byte_end":207601,"line_start":267,"line_end":267,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211460,"byte_end":211470,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216224,"byte_end":216234,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216309,"byte_end":216319,"line_start":196,"line_end":196,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216822,"byte_end":216832,"line_start":217,"line_end":217,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":217798,"byte_end":217808,"line_start":246,"line_end":246,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":218249,"byte_end":218259,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222290,"byte_end":222301,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222853,"byte_end":222864,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223180,"byte_end":223191,"line_start":66,"line_end":66,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223958,"byte_end":223969,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":22715,"byte_end":22718,"line_start":642,"line_end":642,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23485,"byte_end":23494,"line_start":676,"line_end":676,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23957,"byte_end":23971,"line_start":695,"line_end":695,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26344,"byte_end":26350,"line_start":781,"line_end":781,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27337,"byte_end":27343,"line_start":809,"line_end":809,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27556,"byte_end":27562,"line_start":821,"line_end":821,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28568,"byte_end":28585,"line_start":852,"line_end":852,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30405,"byte_end":30414,"line_start":902,"line_end":902,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10343,"byte_end":10356,"line_start":284,"line_end":284,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":30}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40408,"byte_end":40413,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40445,"byte_end":40450,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40482,"byte_end":40488,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":40520,"byte_end":40531,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":159}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10366,"byte_end":10372,"line_start":285,"line_end":285,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":238}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10404,"byte_end":10406,"line_start":286,"line_end":286,"column_start":31,"column_end":33},"ref_id":{"krate":0,"index":302}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10438,"byte_end":10442,"line_start":287,"line_end":287,"column_start":31,"column_end":35},"ref_id":{"krate":0,"index":345}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10452,"byte_end":10461,"line_start":288,"line_end":288,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":362}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":10517,"byte_end":10520,"line_start":289,"line_end":289,"column_start":55,"column_end":58},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55583,"byte_end":55588,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":55919,"byte_end":55924,"line_start":65,"line_end":65,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":712},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56076,"byte_end":56081,"line_start":69,"line_end":69,"column_start":51,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":712},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\range.rs","byte_start":56395,"byte_end":56400,"line_start":78,"line_end":78,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":62}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":64847,"byte_end":64852,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65494,"byte_end":65509,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65727,"byte_end":65742,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":65984,"byte_end":65989,"line_start":136,"line_end":136,"column_start":22,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66093,"byte_end":66108,"line_start":139,"line_end":139,"column_start":22,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66212,"byte_end":66227,"line_start":142,"line_end":142,"column_start":22,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66343,"byte_end":66348,"line_start":146,"line_end":146,"column_start":33,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66621,"byte_end":66636,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":66851,"byte_end":66866,"line_start":162,"line_end":162,"column_start":33,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68424,"byte_end":68434,"line_start":214,"line_end":214,"column_start":6,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68851,"byte_end":68861,"line_start":227,"line_end":227,"column_start":22,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":68976,"byte_end":68986,"line_start":230,"line_end":230,"column_start":33,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70007,"byte_end":70014,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70475,"byte_end":70482,"line_start":281,"line_end":281,"column_start":22,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":70597,"byte_end":70604,"line_start":284,"line_end":284,"column_start":33,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71170,"byte_end":71178,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71497,"byte_end":71505,"line_start":319,"line_end":319,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\gamma.rs","byte_start":71620,"byte_end":71628,"line_start":322,"line_end":322,"column_start":33,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":74511,"byte_end":74525,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":847},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76214,"byte_end":76220,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76636,"byte_end":76642,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":76757,"byte_end":76763,"line_start":116,"line_end":116,"column_start":33,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77469,"byte_end":77478,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":77878,"byte_end":77887,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\normal.rs","byte_start":78002,"byte_end":78011,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":80333,"byte_end":80337,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81348,"byte_end":81351,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81653,"byte_end":81656,"line_start":90,"line_end":90,"column_start":22,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":878},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\exponential.rs","byte_start":81771,"byte_end":81774,"line_start":93,"line_end":93,"column_start":33,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":878},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41277,"byte_end":41283,"line_start":58,"line_end":58,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41607,"byte_end":41617,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":1543}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41646,"byte_end":41656,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":2164}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41737,"byte_end":41747,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41879,"byte_end":41889,"line_start":79,"line_end":79,"column_start":44,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":41989,"byte_end":41999,"line_start":85,"line_end":85,"column_start":11,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":43458,"byte_end":43472,"line_start":131,"line_end":131,"column_start":20,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":44869,"byte_end":44883,"line_start":168,"line_end":168,"column_start":34,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":195}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\distributions\\mod.rs","byte_start":45016,"byte_end":45030,"line_start":172,"line_end":172,"column_start":45,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":199}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110003,"byte_end":110012,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":251},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":110607,"byte_end":110617,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111105,"byte_end":111115,"line_start":105,"line_end":105,"column_start":23,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":7197}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111281,"byte_end":111291,"line_start":112,"line_end":112,"column_start":30,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":912},"to":{"krate":1,"index":1559}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":111489,"byte_end":111498,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\jitter.rs","byte_start":136720,"byte_end":136729,"line_start":717,"line_end":717,"column_start":14,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":251},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139403,"byte_end":139408,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139540,"byte_end":139545,"line_start":48,"line_end":48,"column_start":14,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":308},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":139751,"byte_end":139756,"line_start":54,"line_end":54,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150064,"byte_end":150069,"line_start":437,"line_end":437,"column_start":10,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\os.rs","byte_start":150172,"byte_end":150177,"line_start":443,"line_end":443,"column_start":18,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":933},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157365,"byte_end":157372,"line_start":38,"line_end":38,"column_start":15,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\read.rs","byte_start":157542,"byte_end":157549,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":937},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161018,"byte_end":161030,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":161975,"byte_end":161987,"line_start":61,"line_end":61,"column_start":41,"column_end":53},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":943},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":162549,"byte_end":162561,"line_start":82,"line_end":82,"column_start":33,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":943},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164299,"byte_end":164316,"line_start":139,"line_end":139,"column_start":40,"column_end":57},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":954},"to":{"krate":0,"index":385}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\reseeding.rs","byte_start":164419,"byte_end":164436,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":2189}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\rand_impls.rs","byte_start":184507,"byte_end":184513,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":2,"index":28507},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":191522,"byte_end":191531,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195147,"byte_end":195156,"line_start":188,"line_end":188,"column_start":14,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":195431,"byte_end":195440,"line_start":201,"line_end":201,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\chacha.rs","byte_start":196072,"byte_end":196081,"line_start":224,"line_end":224,"column_start":15,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":201137,"byte_end":201145,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205258,"byte_end":205266,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":2164}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":205339,"byte_end":205347,"line_start":195,"line_end":195,"column_start":14,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":206177,"byte_end":206185,"line_start":219,"line_end":219,"column_start":37,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207146,"byte_end":207154,"line_start":248,"line_end":248,"column_start":15,"column_end":23},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac.rs","byte_start":207593,"byte_end":207601,"line_start":267,"line_end":267,"column_start":21,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":211460,"byte_end":211470,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216224,"byte_end":216234,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":2164}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216309,"byte_end":216319,"line_start":196,"line_end":196,"column_start":14,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":216822,"byte_end":216832,"line_start":217,"line_end":217,"column_start":37,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":217798,"byte_end":217808,"line_start":246,"line_end":246,"column_start":15,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1330},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\isaac64.rs","byte_start":218249,"byte_end":218259,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222290,"byte_end":222301,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":222853,"byte_end":222864,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223180,"byte_end":223191,"line_start":66,"line_end":66,"column_start":32,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\prng\\xorshift.rs","byte_start":223958,"byte_end":223969,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1342},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":12442,"byte_end":12447,"line_start":338,"line_end":338,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":623}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":22715,"byte_end":22718,"line_start":642,"line_end":642,"column_start":25,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23485,"byte_end":23494,"line_start":676,"line_end":676,"column_start":40,"column_end":49},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1353},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":23957,"byte_end":23971,"line_start":695,"line_end":695,"column_start":31,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":24439,"byte_end":24442,"line_start":709,"line_end":709,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":626},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":26344,"byte_end":26350,"line_start":781,"line_end":781,"column_start":6,"column_end":12},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27337,"byte_end":27343,"line_start":809,"line_end":809,"column_start":14,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1386},"to":{"krate":0,"index":626}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":27556,"byte_end":27562,"line_start":821,"line_end":821,"column_start":39,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1386},"to":{"krate":0,"index":681}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":28568,"byte_end":28585,"line_start":852,"line_end":852,"column_start":38,"column_end":55},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":385}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rand-0.4.6\\src\\lib.rs","byte_start":30405,"byte_end":30414,"line_start":902,"line_end":902,"column_start":14,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1397},"to":{"krate":0,"index":626}}]}