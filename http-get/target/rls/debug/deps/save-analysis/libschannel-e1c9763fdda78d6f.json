{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16","program":"C:\\Users\\syaki\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","schannel","C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e1c9763fdda78d6f","-C","extra-filename=-e1c9763fdda78d6f","--out-dir","C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps","-L","dependency=C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps","--extern","lazy_static=C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps\\liblazy_static-1c0cda11c728d028.rmeta","--extern","winapi=C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps\\libwinapi-0426dc05ae6fb789.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\syaki\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"C:\\Users\\syaki\\onedrive\\desktop\\rust\\http-get\\target\\rls\\debug\\deps\\libschannel-e1c9763fdda78d6f.rmeta"},"prelude":{"crate_id":{"name":"schannel","disambiguator":[3917047710298224941,17956413423687926189]},"crate_root":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src","external_crates":[{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9427977260301951124,12109955124372957148]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3215774421958443461,317753073875096730]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17224083688818874547,9559482936290031731]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18091163727436317975,11782788917893645886]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16923134524453488966,338877121959128963]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[15556092502619809596,16433112589117741866]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8626296931894420134,1165415804249109730]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8665569488257896457,16725777632752238541]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8306516236845206973,10531989379467649303]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17140567284527794716,6707285123185935984]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[2371002302899812892,10236220743892507345]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7397349612947417879,16190381825946466186]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9949890438130053664,8357565210831989746]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":14,"id":{"name":"winapi","disambiguator":[18235309627603785207,444305948932184888]}},{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[3734739188166753530,17797314516045504376]}}],"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":0,"byte_end":2151,"line_start":1,"line_end":87,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\key_handle.rs","byte_start":63785,"byte_end":63795,"line_start":3,"line_end":3,"column_start":30,"column_end":40},"alias_span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\key_handle.rs","byte_start":63799,"byte_end":63808,"line_start":3,"line_end":3,"column_start":44,"column_end":53},"name":"KeyHandle","value":"","parent":{"krate":0,"index":349}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":0,"byte_end":2151,"line_start":1,"line_end":87,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":62},{"krate":0,"index":175},{"krate":0,"index":256},{"krate":0,"index":263},{"krate":0,"index":316},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":358},{"krate":0,"index":393},{"krate":0,"index":545},{"krate":0,"index":557},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" Bindings to the Windows SChannel APIs.\n","sig":null,"attributes":[{"value":"cfg(windows)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":43,"byte_end":59,"line_start":2,"line_end":2,"column_start":1,"column_end":17}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":60,"byte_end":82,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":83,"byte_end":116,"line_start":4,"line_end":4,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cert_chain","qualname":"::cert_chain","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58}],"decl_id":null,"docs":" Bindings to winapi's certificate-chain related APIs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2400,"byte_end":2416,"line_start":11,"line_end":11,"column_start":12,"column_end":28},"name":"CertChainContext","qualname":"::cert_chain::CertChainContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" A certificate chain context (consisting of multiple chains)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":3173,"byte_end":3184,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"final_chain","qualname":"<CertChainContext>::final_chain","value":"fn (&self) -> Option<CertChain>","parent":null,"children":[],"decl_id":null,"docs":" Get the final (for a successful verification this means successful) certificate chain","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":3422,"byte_end":3431,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"get_chain","qualname":"<CertChainContext>::get_chain","value":"fn (&self, index: usize) -> Option<CertChain>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the specified chain from the context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":4034,"byte_end":4040,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"chains","qualname":"<CertChainContext>::chains","value":"fn (&self) -> CertificateChains","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all certificate chains in this context\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":4208,"byte_end":4217,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"CertChain","qualname":"::cert_chain::CertChain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (simple) certificate chain\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":4352,"byte_end":4355,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"len","qualname":"<CertChain>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of certificates in the chain\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":4515,"byte_end":4518,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"get","qualname":"<CertChain>::get","value":"fn (&self, idx: usize) -> Option<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Get the n-th certificate from the current chain\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5130,"byte_end":5142,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"certificates","qualname":"<CertChain>::certificates","value":"fn (&self) -> Certificates","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all certificates in this chain\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5326,"byte_end":5343,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"CertificateChains","qualname":"::cert_chain::CertificateChains","value":"CertificateChains {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" An iterator that iterates over all chains in a context\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5694,"byte_end":5706,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"Certificates","qualname":"::cert_chain::Certificates","value":"Certificates {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" An iterator that iterates over all certificates in a chain\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cert_context","qualname":"::cert_context","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":608},{"krate":0,"index":97},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":138},{"krate":0,"index":145},{"krate":0,"index":153},{"krate":0,"index":612},{"krate":0,"index":617},{"krate":0,"index":615},{"krate":0,"index":166},{"krate":0,"index":169}],"decl_id":null,"docs":" Bindings to winapi's `PCCERT_CONTEXT` APIs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6444,"byte_end":6457,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"HashAlgorithm","qualname":"::cert_context::HashAlgorithm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A supported hashing algorithm\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6537,"byte_end":6540,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"md5","qualname":"<HashAlgorithm>::md5","value":"fn () -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6626,"byte_end":6630,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"sha1","qualname":"<HashAlgorithm>::sha1","value":"fn () -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6716,"byte_end":6722,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"sha256","qualname":"<HashAlgorithm>::sha256","value":"fn () -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6812,"byte_end":6818,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"sha384","qualname":"<HashAlgorithm>::sha384","value":"fn () -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6908,"byte_end":6914,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"sha512","qualname":"<HashAlgorithm>::sha512","value":"fn () -> HashAlgorithm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7083,"byte_end":7094,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"CertContext","qualname":"::cert_context::CertContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper of a winapi certificate, or a `PCCERT_CONTEXT`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7628,"byte_end":7631,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<CertContext>::new","value":"fn (data: &[u8]) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a DER-formatted X509 certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":8213,"byte_end":8219,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"to_der","qualname":"<CertContext>::to_der","value":"fn <'a> (&'a self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get certificate in binary DER form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":8343,"byte_end":8370,"line_start":90,"line_end":90,"column_start":12,"column_end":39},"name":"subject_public_key_info_der","qualname":"<CertContext>::subject_public_key_info_der","value":"fn (&self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Certificate subject public key info\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":10147,"byte_end":10155,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"from_pem","qualname":"<CertContext>::from_pem","value":"fn (pem: &str) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a PEM-formatted X509 certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":11744,"byte_end":11750,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"to_pem","qualname":"<CertContext>::to_pem","value":"fn (&self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get certificate as PEM-formatted X509 certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":12763,"byte_end":12774,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"fingerprint","qualname":"<CertContext>::fingerprint","value":"fn (&self, alg: HashAlgorithm) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a hash of this certificate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":13775,"byte_end":13779,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"sha1","qualname":"<CertContext>::sha1","value":"fn (&self) -> io::Result<[u8; 20]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sha1 hash of this certificate","sig":null,"attributes":[{"value":"deprecated(note = \"please use fingerprint instead\")","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":13709,"byte_end":13763,"line_start":210,"line_end":210,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":14305,"byte_end":14325,"line_start":228,"line_end":228,"column_start":12,"column_end":32},"name":"sign_hash_algorithms","qualname":"<CertContext>::sign_hash_algorithms","value":"fn (&self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `<SIGNATURE>/<HASH>` string representing the certificate\n signature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":14477,"byte_end":14491,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"signature_hash","qualname":"<CertContext>::signature_hash","value":"fn (&self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the signature hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":14739,"byte_end":14750,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"description","qualname":"<CertContext>::description","value":"fn (&self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the property displayed by the certificate UI. This property\n allows the user to describe the certificate's use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":14937,"byte_end":14950,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"friendly_name","qualname":"<CertContext>::friendly_name","value":"fn (&self) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string that contains the display name for the certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":15153,"byte_end":15170,"line_start":250,"line_end":250,"column_start":12,"column_end":29},"name":"set_friendly_name","qualname":"<CertContext>::set_friendly_name","value":"fn (&self, name: &str) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configures the string that contains the display name for this\n certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":15398,"byte_end":15411,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"name":"is_time_valid","qualname":"<CertContext>::is_time_valid","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Verifies the time validity of this certificate relative to the system's\n current time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":15674,"byte_end":15685,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"private_key","qualname":"<CertContext>::private_key","value":"fn <'a> (&'a self) -> AcquirePrivateKeyOptions<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder used to acquire the private key corresponding to this certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":15904,"byte_end":15910,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"delete","qualname":"<CertContext>::delete","value":"fn (self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deletes this certificate from its certificate store.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":16316,"byte_end":16333,"line_start":283,"line_end":283,"column_start":12,"column_end":29},"name":"set_key_prov_info","qualname":"<CertContext>::set_key_prov_info","value":"fn <'a> (&'a self) -> SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder used to set the private key associated with this certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":16627,"byte_end":16637,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"valid_uses","qualname":"<CertContext>::valid_uses","value":"fn (&self) -> io::Result<ValidUses>","parent":null,"children":[],"decl_id":null,"docs":" Returns the valid uses for this certificate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":18290,"byte_end":18300,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"cert_store","qualname":"<CertContext>::cert_store","value":"fn (&self) -> Option<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" For a remote certificate, returns a certificate store containing any intermediate\n certificates provided by the remote sender.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":21830,"byte_end":21854,"line_start":429,"line_end":429,"column_start":12,"column_end":36},"name":"AcquirePrivateKeyOptions","qualname":"::cert_context::AcquirePrivateKeyOptions","value":"AcquirePrivateKeyOptions {  }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" A builder type for certificate private key lookup.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":22078,"byte_end":22089,"line_start":437,"line_end":437,"column_start":12,"column_end":23},"name":"compare_key","qualname":"<AcquirePrivateKeyOptions>::compare_key","value":"fn (&mut self, compare_key: bool) -> &mut AcquirePrivateKeyOptions<'a>","parent":null,"children":[],"decl_id":null,"docs":" If set, the certificate's public key will be compared with the private key to ensure a\n match.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":22362,"byte_end":22368,"line_start":443,"line_end":443,"column_start":12,"column_end":18},"name":"silent","qualname":"<AcquirePrivateKeyOptions>::silent","value":"fn (&mut self, silent: bool) -> &mut AcquirePrivateKeyOptions<'a>","parent":null,"children":[],"decl_id":null,"docs":" If set, the lookup will not display any user interface, even if that causes the lookup to\n fail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":22778,"byte_end":22785,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"acquire","qualname":"<AcquirePrivateKeyOptions>::acquire","value":"fn (&self) -> io::Result<PrivateKey>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the private key handle.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24020,"byte_end":24029,"line_start":485,"line_end":485,"column_start":5,"column_end":14},"name":"CryptProv","qualname":"::cert_context::PrivateKey::CryptProv","value":"PrivateKey::CryptProv(CryptProv)","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" A CryptoAPI provider.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24070,"byte_end":24079,"line_start":487,"line_end":487,"column_start":5,"column_end":14},"name":"NcryptKey","qualname":"::cert_context::PrivateKey::NcryptKey","value":"PrivateKey::NcryptKey(NcryptKey)","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" A CNG provider.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":23973,"byte_end":23983,"line_start":483,"line_end":483,"column_start":10,"column_end":20},"name":"PrivateKey","qualname":"::cert_context::PrivateKey","value":"PrivateKey::{CryptProv, NcryptKey}","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":142}],"decl_id":null,"docs":" The private key associated with a certificate context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24179,"byte_end":24193,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"SetKeyProvInfo","qualname":"::cert_context::SetKeyProvInfo","value":"SetKeyProvInfo {  }","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" A builder used to set the private key associated with a certificate.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24581,"byte_end":24590,"line_start":505,"line_end":505,"column_start":12,"column_end":21},"name":"container","qualname":"<SetKeyProvInfo>::container","value":"fn (&mut self, container: &str) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" The name of the key container.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24898,"byte_end":24906,"line_start":514,"line_end":514,"column_start":12,"column_end":20},"name":"provider","qualname":"<SetKeyProvInfo>::provider","value":"fn (&mut self, provider: &str) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" The name of the CSP.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":25201,"byte_end":25206,"line_start":523,"line_end":523,"column_start":12,"column_end":17},"name":"type_","qualname":"<SetKeyProvInfo>::type_","value":"fn (&mut self, type_: ProviderType) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets the CSP type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":25457,"byte_end":25466,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"keep_open","qualname":"<SetKeyProvInfo>::keep_open","value":"fn (&mut self, keep_open: bool) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" If set, the handle to the key provider can be kept open for subsequent\n calls to cryptographic functions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":25672,"byte_end":25686,"line_start":535,"line_end":535,"column_start":12,"column_end":26},"name":"machine_keyset","qualname":"<SetKeyProvInfo>::machine_keyset","value":"fn (&mut self, machine_keyset: bool) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" If set, the key container contains machine keys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":25937,"byte_end":25943,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"silent","qualname":"<SetKeyProvInfo>::silent","value":"fn (&mut self, silent: bool) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" If set, the key container will attempt to open keys without any user\n interface prompts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":26335,"byte_end":26343,"line_start":555,"line_end":555,"column_start":12,"column_end":20},"name":"key_spec","qualname":"<SetKeyProvInfo>::key_spec","value":"fn (&mut self, key_spec: KeySpec) -> &mut SetKeyProvInfo<'a>","parent":null,"children":[],"decl_id":null,"docs":" The specification of the private key to retrieve.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":26521,"byte_end":26524,"line_start":561,"line_end":561,"column_start":12,"column_end":15},"name":"set","qualname":"<SetKeyProvInfo>::set","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the private key for this certificate.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":27721,"byte_end":27728,"line_start":592,"line_end":592,"column_start":12,"column_end":19},"name":"KeySpec","qualname":"::cert_context::KeySpec","value":"","parent":null,"children":[],"decl_id":null,"docs":" The specification of a private key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":27824,"byte_end":27836,"line_start":596,"line_end":596,"column_start":12,"column_end":24},"name":"key_exchange","qualname":"<KeySpec>::key_exchange","value":"fn () -> KeySpec","parent":null,"children":[],"decl_id":null,"docs":" A key used to encrypt/decrypt session keys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":27972,"byte_end":27981,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"signature","qualname":"<KeySpec>::signature","value":"fn () -> KeySpec","parent":null,"children":[],"decl_id":null,"docs":" A key used to create and verify digital signatures.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":28169,"byte_end":28172,"line_start":609,"line_end":609,"column_start":5,"column_end":8},"name":"All","qualname":"::cert_context::ValidUses::All","value":"ValidUses::All","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Certificate is valid for all uses\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":28293,"byte_end":28297,"line_start":613,"line_end":613,"column_start":5,"column_end":9},"name":"Oids","qualname":"::cert_context::ValidUses::Oids","value":"ValidUses::Oids(Vec<String>)","parent":{"krate":0,"index":169},"children":[],"decl_id":null,"docs":" Certificate is valid for uses specified. No entries means that the certificate\n has no valid uses.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":28111,"byte_end":28120,"line_start":607,"line_end":607,"column_start":10,"column_end":19},"name":"ValidUses","qualname":"::cert_context::ValidUses","value":"ValidUses::{All, Oids}","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":172}],"decl_id":null,"docs":" Valid uses of a Certificate - All, or specific OIDs\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cert_store","qualname":"::cert_store","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":618},{"krate":0,"index":200},{"krate":0,"index":222},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":240},{"krate":0,"index":248},{"krate":0,"index":251}],"decl_id":null,"docs":" Bindings to winapi's certificate-store related APIs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30686,"byte_end":30695,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"CertStore","qualname":"::cert_store::CertStore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of certificate store on Windows, wrapping a `HCERTSTORE`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":31584,"byte_end":31590,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Always","qualname":"::cert_store::CertAdd::Always","value":"CertAdd::Always","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The function makes no check for an existing matching certificate or link\n to a matching certificate. A new certificate is always added to the\n store. This can lead to duplicates in a store.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":31747,"byte_end":31750,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"New","qualname":"::cert_store::CertAdd::New","value":"CertAdd::New","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists,\n the operation fails.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":32395,"byte_end":32400,"line_start":68,"line_end":68,"column_start":5,"column_end":10},"name":"Newer","qualname":"::cert_store::CertAdd::Newer","value":"CertAdd::Newer","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists and\n the NotBefore time of the existing context is equal to or greater than\n the NotBefore time of the new context being added, the operation fails.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":32988,"byte_end":33010,"line_start":78,"line_end":78,"column_start":5,"column_end":27},"name":"NewerInheritProperties","qualname":"::cert_store::CertAdd::NewerInheritProperties","value":"CertAdd::NewerInheritProperties","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists and\n the NotBefore time of the existing context is equal to or greater than\n the NotBefore time of the new context being added, the operation fails.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":33355,"byte_end":33370,"line_start":84,"line_end":84,"column_start":5,"column_end":20},"name":"ReplaceExisting","qualname":"::cert_store::CertAdd::ReplaceExisting","value":"CertAdd::ReplaceExisting","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" If a link to a matching certificate exists, that existing certificate or\n link is deleted and a new certificate is created and added to the store.\n If a matching certificate or a link to a matching certificate does not\n exist, a new link is added.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":33606,"byte_end":33638,"line_start":89,"line_end":89,"column_start":5,"column_end":37},"name":"ReplaceExistingInheritProperties","qualname":"::cert_store::CertAdd::ReplaceExistingInheritProperties","value":"CertAdd::ReplaceExistingInheritProperties","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" If a matching certificate exists in the store, the existing context is\n not replaced. The existing context inherits properties from the new\n certificate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":34162,"byte_end":34173,"line_start":99,"line_end":99,"column_start":5,"column_end":16},"name":"UseExisting","qualname":"::cert_store::CertAdd::UseExisting","value":"CertAdd::UseExisting","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" If a matching certificate or a link to a matching certificate exists,\n that existing certificate or link is used and properties from the\n new certificate are added. The function does not fail, but it does\n not add a new context. The existing context is duplicated and returned.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":31358,"byte_end":31365,"line_start":49,"line_end":49,"column_start":10,"column_end":17},"name":"CertAdd","qualname":"::cert_store::CertAdd","value":"CertAdd::{Always, New, Newer, NewerInheritProperties, ReplaceExisting, ReplaceExistingInheritProperties, UseExisting}","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219}],"decl_id":null,"docs":" Argument to the `add_cert` function indicating how a certificate should be\n added to a `CertStore`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":34404,"byte_end":34421,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"open_current_user","qualname":"<CertStore>::open_current_user","value":"fn (which: &str) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Opens up the specified key store within the context of the current user.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":35366,"byte_end":35384,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"open_local_machine","qualname":"<CertStore>::open_local_machine","value":"fn (which: &str) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Opens up the specified key store within the context of the local\n machine.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":36352,"byte_end":36365,"line_start":152,"line_end":152,"column_start":12,"column_end":25},"name":"import_pkcs12","qualname":"<CertStore>::import_pkcs12","value":"fn (data: &[u8], password: Option<&str>) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Imports a PKCS#12-encoded key/certificate pair, returned as a\n `CertStore` instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":37432,"byte_end":37437,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"certs","qualname":"<CertStore>::certs","value":"fn (&self) -> Certs","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the certificates in this certificate store.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":37706,"byte_end":37714,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"add_cert","qualname":"<CertStore>::add_cert","value":"fn (&mut self, cx: &CertContext, how: CertAdd) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Adds a certificate context to this store.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":38591,"byte_end":38604,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"export_pkcs12","qualname":"<CertStore>::export_pkcs12","value":"fn (&self, password: &str) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Exports this certificate store as a PKCS#12-encoded blob.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":39960,"byte_end":39965,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"Certs","qualname":"::cert_store::Certs","value":"Certs {  }","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"decl_id":null,"docs":" An iterator over the certificates contained in a `CertStore`, returned by\n `CertStore::iter`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":40807,"byte_end":40823,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"PfxImportOptions","qualname":"::cert_store::PfxImportOptions","value":"PfxImportOptions {  }","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"decl_id":null,"docs":" A builder type for imports of PKCS #12 archives.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":40986,"byte_end":40989,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"new","qualname":"<PfxImportOptions>::new","value":"fn () -> PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `PfxImportOptions` with default settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":41129,"byte_end":41137,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"password","qualname":"<PfxImportOptions>::password","value":"fn (&mut self, password: &str) -> &mut PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the password to be used to decrypt the archive.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":41466,"byte_end":41480,"line_start":292,"line_end":292,"column_start":12,"column_end":26},"name":"no_persist_key","qualname":"<PfxImportOptions>::no_persist_key","value":"fn (&mut self, no_persist_key: bool) -> &mut PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the private key in the archive will not be persisted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":41703,"byte_end":41730,"line_start":297,"line_end":297,"column_start":12,"column_end":39},"name":"include_extended_properties","qualname":"<PfxImportOptions>::include_extended_properties","value":"fn (&mut self, include_extended_properties: bool) -> &mut PfxImportOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, all extended properties of the certificate will be imported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":42299,"byte_end":42305,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"import","qualname":"<PfxImportOptions>::import","value":"fn (&self, data: &[u8]) -> io::Result<CertStore>","parent":null,"children":[],"decl_id":null,"docs":" Imports certificates from a PKCS #12 archive, returning a `CertStore` containing them.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":43080,"byte_end":43086,"line_start":333,"line_end":333,"column_start":12,"column_end":18},"name":"Memory","qualname":"::cert_store::Memory","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of an in-memory certificate store.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":43311,"byte_end":43314,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"new","qualname":"<Memory>::new","value":"fn () -> io::Result<Memory>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new in-memory certificate store which certificates and CTLs\n can be added to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":43992,"byte_end":44015,"line_start":358,"line_end":358,"column_start":12,"column_end":35},"name":"add_encoded_certificate","qualname":"<Memory>::add_encoded_certificate","value":"fn (&mut self, cert: &[u8]) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new certificate to this memory store.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":45121,"byte_end":45136,"line_start":380,"line_end":380,"column_start":12,"column_end":27},"name":"add_encoded_ctl","qualname":"<Memory>::add_encoded_ctl","value":"fn (&mut self, ctl: &[u8]) -> io::Result<CtlContext>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new CTL to this memory store, in its encoded form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":46109,"byte_end":46119,"line_start":400,"line_end":400,"column_start":12,"column_end":22},"name":"into_store","qualname":"<Memory>::into_store","value":"fn (self) -> CertStore","parent":null,"children":[],"decl_id":null,"docs":" Consumes this memory store, returning the underlying `CertStore`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypt_key","qualname":"::crypt_key","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_key.rs","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":627}],"decl_id":null,"docs":" CryptoAPI private keys.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_key.rs","byte_start":47542,"byte_end":47550,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"CryptKey","qualname":"::crypt_key::CryptKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a key.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypt_prov","qualname":"::crypt_prov","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":631},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":635},{"krate":0,"index":640},{"krate":0,"index":638},{"krate":0,"index":296},{"krate":0,"index":308},{"krate":0,"index":312}],"decl_id":null,"docs":" CryptoAPI key providers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48021,"byte_end":48030,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"CryptProv","qualname":"::crypt_prov::CryptProv","value":"","parent":null,"children":[],"decl_id":null,"docs":" A CryptoAPI handle to a provider of a key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48308,"byte_end":48314,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"import","qualname":"<CryptProv>::import","value":"fn <'a> (&'a mut self) -> ImportOptions<'a>","parent":null,"children":[],"decl_id":null,"docs":" Imports a key into this provider.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48488,"byte_end":48502,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"AcquireOptions","qualname":"::crypt_prov::AcquireOptions","value":"AcquireOptions {  }","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" A builder for `CryptProv`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48685,"byte_end":48688,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<AcquireOptions>::new","value":"fn () -> AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with default settings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48956,"byte_end":48965,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"container","qualname":"<AcquireOptions>::container","value":"fn (&mut self, container: &str) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for this key container.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":49177,"byte_end":49185,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"provider","qualname":"<AcquireOptions>::provider","value":"fn (&mut self, provider: &str) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the CSP to be used.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":49415,"byte_end":49429,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"verify_context","qualname":"<AcquireOptions>::verify_context","value":"fn (&mut self, verify_context: bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, private keys will not be accessible or persisted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":49618,"byte_end":49628,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"new_keyset","qualname":"<AcquireOptions>::new_keyset","value":"fn (&mut self, new_keyset: bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the container will be created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":49839,"byte_end":49853,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"machine_keyset","qualname":"<AcquireOptions>::machine_keyset","value":"fn (&mut self, machine_keyset: bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, the container will be stored as a machine rather than user keys.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":50112,"byte_end":50118,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"silent","qualname":"<AcquireOptions>::silent","value":"fn (&mut self, silent: bool) -> &mut AcquireOptions","parent":null,"children":[],"decl_id":null,"docs":" If set, an error will be returned if user intervention is required\n rather than displaying a dialog.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":50475,"byte_end":50482,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"acquire","qualname":"<AcquireOptions>::acquire","value":"fn (&self, type_: ProviderType) -> io::Result<CryptProv>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a container.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51412,"byte_end":51424,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"ProviderType","qualname":"::crypt_prov::ProviderType","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier of the type of cryptography provider to be used with a\n container.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51496,"byte_end":51504,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"rsa_full","qualname":"<ProviderType>::rsa_full","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51589,"byte_end":51596,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"rsa_aes","qualname":"<ProviderType>::rsa_aes","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51680,"byte_end":51687,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"rsa_sig","qualname":"<ProviderType>::rsa_sig","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51771,"byte_end":51783,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"rsa_schannel","qualname":"<ProviderType>::rsa_schannel","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51872,"byte_end":51875,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"dss","qualname":"<ProviderType>::dss","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51955,"byte_end":51961,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"dss_dh","qualname":"<ProviderType>::dss_dh","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52044,"byte_end":52055,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"dh_schannel","qualname":"<ProviderType>::dh_schannel","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52143,"byte_end":52151,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"fortezza","qualname":"<ProviderType>::fortezza","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52236,"byte_end":52247,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"ms_exchange","qualname":"<ProviderType>::ms_exchange","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52335,"byte_end":52338,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"ssl","qualname":"<ProviderType>::ssl","value":"fn () -> ProviderType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52418,"byte_end":52424,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ProviderType>::as_raw","value":"fn (&self) -> winapi::DWORD","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52517,"byte_end":52530,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"ImportOptions","qualname":"::crypt_prov::ImportOptions","value":"ImportOptions {  }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" A builder for key imports.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52684,"byte_end":52690,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"import","qualname":"<ImportOptions>::import","value":"fn (&mut self, der: &[u8]) -> io::Result<CryptKey>","parent":null,"children":[],"decl_id":null,"docs":" Imports a DER-encoded PKCS1 private key.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":54129,"byte_end":54141,"line_start":209,"line_end":209,"column_start":12,"column_end":24},"name":"import_pkcs8","qualname":"<ImportOptions>::import_pkcs8","value":"fn (&mut self, der: &[u8]) -> io::Result<CryptKey>","parent":null,"children":[],"decl_id":null,"docs":" Imports a DER-encoded PKCS8 private key.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":57925,"byte_end":57935,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"CtlContext","qualname":"::ctl_context::CtlContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapped `PCCTL_CONTEXT` which represents a certificate trust list to\n Windows.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58583,"byte_end":58590,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"builder","qualname":"<CtlContext>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder reader to create an encoded `CtlContext`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58838,"byte_end":58845,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"Builder","qualname":"::ctl_context::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Used to build an encoded `CtlContext` which can be added to a `Memory` store\n to get back the actual `CtlContext`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":59019,"byte_end":59030,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"certificate","qualname":"<Builder>::certificate","value":"fn (&mut self, cert: CertContext) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Adds a certificate to be passed to `CryptMsgEncodeAndSignCTL` later on.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":59265,"byte_end":59270,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"usage","qualname":"<Builder>::usage","value":"fn (&mut self, usage: &str) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Adds a usage string to be passed in the `SubjectUsage` field to\n `CryptMsgEncodeAndSignCTL` later on.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":59621,"byte_end":59636,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"encode_and_sign","qualname":"<Builder>::encode_and_sign","value":"fn (&self) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Calls `CryptMsgEncodeAndSignCTL` to encode this list of certificates\n into a CTL.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\key_handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key_handle","qualname":"::key_handle","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\key_handle.rs","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" Deprecated.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ncrypt_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ncrypt_key","qualname":"::ncrypt_key","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ncrypt_key.rs","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":652}],"decl_id":null,"docs":" CNG private keys.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ncrypt_key.rs","byte_start":63897,"byte_end":63906,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"NcryptKey","qualname":"::ncrypt_key::NcryptKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A CNG handle to a key.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schannel_cred","qualname":"::schannel_cred","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":680},{"krate":0,"index":678},{"krate":0,"index":676},{"krate":0,"index":674},{"krate":0,"index":672},{"krate":0,"index":681},{"krate":0,"index":783},{"krate":0,"index":782},{"krate":0,"index":780},{"krate":0,"index":785},{"krate":0,"index":799},{"krate":0,"index":798},{"krate":0,"index":796},{"krate":0,"index":371},{"krate":0,"index":801},{"krate":0,"index":807},{"krate":0,"index":805},{"krate":0,"index":373},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":391}],"decl_id":null,"docs":" Schannel credentials.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":64649,"byte_end":64656,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Inbound","qualname":"::schannel_cred::Direction::Inbound","value":"Direction::Inbound","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Server-side, inbound connections.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":64705,"byte_end":64713,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Outbound","qualname":"::schannel_cred::Direction::Outbound","value":"Direction::Outbound","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Client-side, outbound connections.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":64591,"byte_end":64600,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"Direction","qualname":"::schannel_cred::Direction","value":"Direction::{Inbound, Outbound}","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":670}],"decl_id":null,"docs":" The communication direction that an `SchannelCred` will support.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":64951,"byte_end":64954,"line_start":31,"line_end":31,"column_start":5,"column_end":8},"name":"Aes","qualname":"::schannel_cred::Algorithm::Aes","value":"Algorithm::Aes","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Advanced Encryption Standard (AES).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65002,"byte_end":65008,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Aes128","qualname":"::schannel_cred::Algorithm::Aes128","value":"Algorithm::Aes128","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" 128 bit AES.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65060,"byte_end":65066,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Aes192","qualname":"::schannel_cred::Algorithm::Aes192","value":"Algorithm::Aes192","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" 192 bit AES.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65118,"byte_end":65124,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Aes256","qualname":"::schannel_cred::Algorithm::Aes256","value":"Algorithm::Aes256","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" 256 bit AES.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65239,"byte_end":65251,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"AgreedkeyAny","qualname":"::schannel_cred::Algorithm::AgreedkeyAny","value":"Algorithm::AgreedkeyAny","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Temporary algorithm identifier for handles of Diffie-Hellman–agreed keys.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65417,"byte_end":65426,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"name":"CylinkMek","qualname":"::schannel_cred::Algorithm::CylinkMek","value":"Algorithm::CylinkMek","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" An algorithm to create a 40-bit DES key that has parity bits and zeroed key bits to make\n its key length 64 bits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65494,"byte_end":65497,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Des","qualname":"::schannel_cred::Algorithm::Des","value":"Algorithm::Des","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" DES encryption algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65559,"byte_end":65563,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Desx","qualname":"::schannel_cred::Algorithm::Desx","value":"Algorithm::Desx","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" DESX encryption algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65648,"byte_end":65655,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"DhEphem","qualname":"::schannel_cred::Algorithm::DhEphem","value":"Algorithm::DhEphem","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Diffie-Hellman ephemeral key exchange algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65752,"byte_end":65756,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"DhSf","qualname":"::schannel_cred::Algorithm::DhSf","value":"Algorithm::DhSf","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Diffie-Hellman store and forward key exchange algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65829,"byte_end":65836,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"name":"DssSign","qualname":"::schannel_cred::Algorithm::DssSign","value":"Algorithm::DssSign","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" DSA public key signature algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":65930,"byte_end":65934,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"Ecdh","qualname":"::schannel_cred::Algorithm::Ecdh","value":"Algorithm::Ecdh","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Elliptic curve Diffie-Hellman key exchange algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66193,"byte_end":66198,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Ecdsa","qualname":"::schannel_cred::Algorithm::Ecdsa","value":"Algorithm::Ecdsa","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Elliptic curve digital signature algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66271,"byte_end":66285,"line_start":61,"line_end":61,"column_start":5,"column_end":19},"name":"HashReplaceOwf","qualname":"::schannel_cred::Algorithm::HashReplaceOwf","value":"Algorithm::HashReplaceOwf","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" One way function hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66363,"byte_end":66372,"line_start":63,"line_end":63,"column_start":5,"column_end":14},"name":"HughesMd5","qualname":"::schannel_cred::Algorithm::HughesMd5","value":"Algorithm::HughesMd5","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Hughes MD5 hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66441,"byte_end":66445,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Hmac","qualname":"::schannel_cred::Algorithm::Hmac","value":"Algorithm::Hmac","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" HMAC keyed hash algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66507,"byte_end":66510,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"Mac","qualname":"::schannel_cred::Algorithm::Mac","value":"Algorithm::Mac","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" MAC keyed hash algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66568,"byte_end":66571,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"Md2","qualname":"::schannel_cred::Algorithm::Md2","value":"Algorithm::Md2","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" MD2 hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66629,"byte_end":66632,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"Md4","qualname":"::schannel_cred::Algorithm::Md4","value":"Algorithm::Md4","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" MD4 hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66690,"byte_end":66693,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"Md5","qualname":"::schannel_cred::Algorithm::Md5","value":"Algorithm::Md5","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" MD5 hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":742},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66753,"byte_end":66759,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"NoSign","qualname":"::schannel_cred::Algorithm::NoSign","value":"Algorithm::NoSign","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" No signature algorithm..\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66830,"byte_end":66833,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"Rc2","qualname":"::schannel_cred::Algorithm::Rc2","value":"Algorithm::Rc2","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" RC2 block encryption algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66901,"byte_end":66904,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"Rc4","qualname":"::schannel_cred::Algorithm::Rc4","value":"Algorithm::Rc4","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" RC4 stream encryption algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":66971,"byte_end":66974,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"Rc5","qualname":"::schannel_cred::Algorithm::Rc5","value":"Algorithm::Rc5","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" RC5 block encryption algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67044,"byte_end":67051,"line_start":83,"line_end":83,"column_start":5,"column_end":12},"name":"RsaKeyx","qualname":"::schannel_cred::Algorithm::RsaKeyx","value":"Algorithm::RsaKeyx","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" RSA public key exchange algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67127,"byte_end":67134,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"RsaSign","qualname":"::schannel_cred::Algorithm::RsaSign","value":"Algorithm::RsaSign","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" RSA public key signature algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67197,"byte_end":67201,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Sha1","qualname":"::schannel_cred::Algorithm::Sha1","value":"Algorithm::Sha1","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" SHA hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67268,"byte_end":67274,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sha256","qualname":"::schannel_cred::Algorithm::Sha256","value":"Algorithm::Sha256","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" 256 bit SHA hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67344,"byte_end":67350,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Sha384","qualname":"::schannel_cred::Algorithm::Sha384","value":"Algorithm::Sha384","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" 384 bit SHA hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67420,"byte_end":67426,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"Sha512","qualname":"::schannel_cred::Algorithm::Sha512","value":"Algorithm::Sha512","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" 512 bit SHA hashing algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67498,"byte_end":67507,"line_start":95,"line_end":95,"column_start":5,"column_end":14},"name":"TripleDes","qualname":"::schannel_cred::Algorithm::TripleDes","value":"Algorithm::TripleDes","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Triple DES encryption algorithm.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67618,"byte_end":67630,"line_start":97,"line_end":97,"column_start":5,"column_end":17},"name":"TripleDes112","qualname":"::schannel_cred::Algorithm::TripleDes112","value":"Algorithm::TripleDes112","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Two-key triple DES encryption with effective key length equal to 112 bits.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67681,"byte_end":67699,"line_start":99,"line_end":99,"column_start":5,"column_end":23},"name":"__ForExtensibility","qualname":"::schannel_cred::Algorithm::__ForExtensibility","value":"Algorithm::__ForExtensibility","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":64891,"byte_end":64900,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::schannel_cred::Algorithm","value":"Algorithm::{Aes, Aes128, Aes192, Aes256, AgreedkeyAny, CylinkMek, Des, Desx, DhEphem, DhSf, DssSign, Ecdh, Ecdsa, HashReplaceOwf, HughesMd5, Hmac, Mac, Md2, Md4, Md5, NoSign, Rc2, Rc4, Rc5, RsaKeyx, RsaSign, Sha1, Sha256, Sha384, Sha512, TripleDes, TripleDes112, __ForExtensibility}","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778}],"decl_id":null,"docs":" Algorithms supported by Schannel.\n","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":64869,"byte_end":64881,"line_start":28,"line_end":28,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67828,"byte_end":67832,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Ssl3","qualname":"::schannel_cred::Protocol::Ssl3","value":"Protocol::Ssl3","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Secure Sockets Layer 3.0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67875,"byte_end":67880,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"Tls10","qualname":"::schannel_cred::Protocol::Tls10","value":"Protocol::Tls10","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67923,"byte_end":67928,"line_start":110,"line_end":110,"column_start":5,"column_end":10},"name":"Tls11","qualname":"::schannel_cred::Protocol::Tls11","value":"Protocol::Tls11","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.1\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67971,"byte_end":67976,"line_start":112,"line_end":112,"column_start":5,"column_end":10},"name":"Tls12","qualname":"::schannel_cred::Protocol::Tls12","value":"Protocol::Tls12","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Transport Layer Security 1.2\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":68001,"byte_end":68019,"line_start":114,"line_end":114,"column_start":5,"column_end":23},"name":"__ForExtensibility","qualname":"::schannel_cred::Protocol::__ForExtensibility","value":"Protocol::__ForExtensibility","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":67780,"byte_end":67788,"line_start":104,"line_end":104,"column_start":10,"column_end":18},"name":"Protocol","qualname":"::schannel_cred::Protocol","value":"Protocol::{Ssl3, Tls10, Tls11, Tls12, __ForExtensibility}","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"decl_id":null,"docs":" Protocols supported by Schannel.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":69013,"byte_end":69020,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"Builder","qualname":"::schannel_cred::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"decl_id":null,"docs":" A builder type for `SchannelCred`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":69210,"byte_end":69213,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Builder`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":69355,"byte_end":69375,"line_start":148,"line_end":148,"column_start":12,"column_end":32},"name":"supported_algorithms","qualname":"<Builder>::supported_algorithms","value":"fn (&mut self, supported_algorithms: &[Algorithm]) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the algorithms supported for credentials created from this builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":69909,"byte_end":69926,"line_start":163,"line_end":163,"column_start":12,"column_end":29},"name":"enabled_protocols","qualname":"<Builder>::enabled_protocols","value":"fn (&mut self, enabled_protocols: &[Protocol]) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the protocols enabled for credentials created from this builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":70859,"byte_end":70863,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"cert","qualname":"<Builder>::cert","value":"fn (&mut self, cx: CertContext) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Add a certificate to get passed down when the credentials are acquired.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":71008,"byte_end":71015,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"acquire","qualname":"<Builder>::acquire","value":"fn (&self, direction: Direction) -> io::Result<SchannelCred>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SchannelCred`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73154,"byte_end":73166,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"SchannelCred","qualname":"::schannel_cred::SchannelCred","value":"","parent":null,"children":[],"decl_id":null,"docs":" An SChannel credential.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73689,"byte_end":73696,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"builder","qualname":"<SchannelCred>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tls_stream","qualname":"::tls_stream","value":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":841},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":455},{"krate":0,"index":465},{"krate":0,"index":483},{"krate":0,"index":844},{"krate":0,"index":852},{"krate":0,"index":486},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":510},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":538},{"krate":0,"index":541}],"decl_id":null,"docs":" Schannel TLS streams.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":74857,"byte_end":74864,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"Builder","qualname":"::tls_stream::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"decl_id":null,"docs":" A builder type for `TlsStream`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75402,"byte_end":75405,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Builder`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75657,"byte_end":75663,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"domain","qualname":"<Builder>::domain","value":"fn (&mut self, domain: &str) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the domain associated with connections created with this `Builder`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75915,"byte_end":75922,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"use_sni","qualname":"<Builder>::use_sni","value":"fn (&mut self, use_sni: bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Determines if Server Name Indication (SNI) will be used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":76160,"byte_end":76184,"line_start":79,"line_end":79,"column_start":12,"column_end":36},"name":"accept_invalid_hostnames","qualname":"<Builder>::accept_invalid_hostnames","value":"fn (&mut self, accept_invalid_hostnames: bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Determines if the server's hostname will be checked during certificate verification.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":76801,"byte_end":76816,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"verify_callback","qualname":"<Builder>::verify_callback","value":"fn <F> (&mut self, callback: F) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set a verification callback to be used for connections created with this `Builder`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":77430,"byte_end":77440,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"cert_store","qualname":"<Builder>::cert_store","value":"fn (&mut self, cert_store: CertStore) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Specifies a custom certificate store which is later used when validating\n a server's certificate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":78044,"byte_end":78051,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"connect","qualname":"<Builder>::connect","value":"fn <S> (&mut self, cred: SchannelCred, stream: S) -> Result<TlsStream<S>, HandshakeError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Initialize a new TLS session where the stream provided will be\n connecting to a remote TLS server.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":78930,"byte_end":78936,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"accept","qualname":"<Builder>::accept","value":"fn <S> (&mut self, cred: SchannelCred, stream: S) -> Result<TlsStream<S>, HandshakeError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Initialize a new TLS session where the stream provided will be\n accepting a connection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":81095,"byte_end":81104,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"TlsStream","qualname":"::tls_stream::TlsStream","value":"TlsStream {  }","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"decl_id":null,"docs":" An Schannel TLS stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82158,"byte_end":82165,"line_start":242,"line_end":242,"column_start":5,"column_end":12},"name":"Failure","qualname":"::tls_stream::HandshakeError::Failure","value":"HandshakeError::Failure(io::Error)","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" A fatal I/O error occurred\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82276,"byte_end":82287,"line_start":245,"line_end":245,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::tls_stream::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshakeTlsStream<S>)","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" The stream connection is in progress, but the handshake is not completed\n yet.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82099,"byte_end":82113,"line_start":240,"line_end":240,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::tls_stream::HandshakeError","value":"HandshakeError::{Failure, Interrupted}","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":849}],"decl_id":null,"docs":" A failure which can happen during the `Builder::initialize` phase, either an\n I/O error or an intermediate stream which has not completed its handshake.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82418,"byte_end":82438,"line_start":249,"line_end":249,"column_start":12,"column_end":32},"name":"CertValidationResult","qualname":"::tls_stream::CertValidationResult","value":"CertValidationResult {  }","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" A struct used to wrap various cert chain validation results for callback processing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82641,"byte_end":82659,"line_start":258,"line_end":258,"column_start":12,"column_end":30},"name":"failed_certificate","qualname":"<CertValidationResult>::failed_certificate","value":"fn (&self) -> Option<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Returns the certificate that failed validation if applicable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82966,"byte_end":82971,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"chain","qualname":"<CertValidationResult>::chain","value":"fn (&self) -> Option<CertChain>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final certificate chain in the certificate context if applicable\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":83130,"byte_end":83136,"line_start":271,"line_end":271,"column_start":12,"column_end":18},"name":"result","qualname":"<CertValidationResult>::result","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns the result of the built-in certificate verification process.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84174,"byte_end":84195,"line_start":308,"line_end":308,"column_start":12,"column_end":33},"name":"MidHandshakeTlsStream","qualname":"::tls_stream::MidHandshakeTlsStream","value":"MidHandshakeTlsStream {  }","parent":null,"children":[{"krate":0,"index":857}],"decl_id":null,"docs":" A stream which has not yet completed its handshake.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84549,"byte_end":84556,"line_start":324,"line_end":324,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TlsStream<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the wrapped stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84670,"byte_end":84677,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TlsStream<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84825,"byte_end":84834,"line_start":334,"line_end":334,"column_start":12,"column_end":21},"name":"is_server","qualname":"<TlsStream<S>>::is_server","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this stream is the server- or client-side of a TLS session.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":85135,"byte_end":85146,"line_start":346,"line_end":346,"column_start":12,"column_end":23},"name":"certificate","qualname":"<TlsStream<S>>::certificate","value":"fn (&self) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Returns the certificate used to identify this side of the TLS session.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":85398,"byte_end":85414,"line_start":354,"line_end":354,"column_start":12,"column_end":28},"name":"peer_certificate","qualname":"<TlsStream<S>>::peer_certificate","value":"fn (&self) -> io::Result<CertContext>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer's certificate, if available.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":85736,"byte_end":85743,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"get_buf","qualname":"<TlsStream<S>>::get_buf","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the buffer of pending data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":85882,"byte_end":85890,"line_start":368,"line_end":368,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TlsStream<S>>::shutdown","value":"fn (&mut self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts the TLS session down.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":106787,"byte_end":106794,"line_start":847,"line_end":847,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshakeTlsStream<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":106914,"byte_end":106921,"line_start":852,"line_end":852,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshakeTlsStream<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":107096,"byte_end":107105,"line_start":861,"line_end":861,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshakeTlsStream<S>>::handshake","value":"fn (mut self) -> Result<TlsStream<S>, HandshakeError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2475,"byte_end":2491,"line_start":13,"line_end":13,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2516,"byte_end":2532,"line_start":14,"line_end":14,"column_start":22,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2552,"byte_end":2568,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2764,"byte_end":2780,"line_start":25,"line_end":25,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2905,"byte_end":2921,"line_start":33,"line_end":33,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":4273,"byte_end":4282,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5426,"byte_end":5443,"line_start":115,"line_end":115,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5780,"byte_end":5792,"line_start":131,"line_end":131,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6510,"byte_end":6523,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7144,"byte_end":7155,"line_start":49,"line_end":49,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7180,"byte_end":7191,"line_start":50,"line_end":50,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7210,"byte_end":7221,"line_start":52,"line_end":52,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7358,"byte_end":7369,"line_start":60,"line_end":60,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7553,"byte_end":7564,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":21631,"byte_end":21642,"line_start":422,"line_end":422,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":21926,"byte_end":21950,"line_start":434,"line_end":434,"column_start":10,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24385,"byte_end":24399,"line_start":500,"line_end":500,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":27751,"byte_end":27758,"line_start":594,"line_end":594,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30741,"byte_end":30750,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30775,"byte_end":30784,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30809,"byte_end":30818,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30940,"byte_end":30949,"line_start":31,"line_end":31,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":31077,"byte_end":31086,"line_start":39,"line_end":39,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":34232,"byte_end":34241,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":40053,"byte_end":40058,"line_start":245,"line_end":245,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":40892,"byte_end":40908,"line_start":277,"line_end":277,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":43105,"byte_end":43111,"line_start":335,"line_end":335,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_key.rs","byte_start":47588,"byte_end":47596,"line_start":7,"line_end":7,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48069,"byte_end":48078,"line_start":15,"line_end":15,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48243,"byte_end":48252,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48604,"byte_end":48618,"line_start":42,"line_end":42,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51470,"byte_end":51482,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52604,"byte_end":52617,"line_start":176,"line_end":176,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":57984,"byte_end":57994,"line_start":24,"line_end":24,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58019,"byte_end":58029,"line_start":25,"line_end":25,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58048,"byte_end":58058,"line_start":27,"line_end":27,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58212,"byte_end":58222,"line_start":35,"line_end":35,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58491,"byte_end":58501,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58918,"byte_end":58925,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ncrypt_key.rs","byte_start":63950,"byte_end":63959,"line_start":7,"line_end":7,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":68029,"byte_end":68037,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":69156,"byte_end":69163,"line_start":141,"line_end":141,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73201,"byte_end":73213,"line_start":235,"line_end":235,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73364,"byte_end":73376,"line_start":243,"line_end":243,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73636,"byte_end":73648,"line_start":257,"line_end":257,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75103,"byte_end":75110,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75348,"byte_end":75355,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82538,"byte_end":82558,"line_start":256,"line_end":256,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":83375,"byte_end":83389,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":83860,"byte_end":83874,"line_start":296,"line_end":296,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84252,"byte_end":84261,"line_start":312,"line_end":312,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84472,"byte_end":84481,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84889,"byte_end":84898,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":106693,"byte_end":106714,"line_start":845,"line_end":845,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":106991,"byte_end":107012,"line_start":857,"line_end":857,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":107468,"byte_end":107477,"line_start":872,"line_end":872,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":108585,"byte_end":108594,"line_start":903,"line_end":903,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":108983,"byte_end":108992,"line_start":918,"line_end":918,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\context_buffer.rs","byte_start":109848,"byte_end":109861,"line_start":7,"line_end":7,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\context_buffer.rs","byte_start":109994,"byte_end":110007,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\security_context.rs","byte_start":110559,"byte_end":110574,"line_start":16,"line_end":16,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\security_context.rs","byte_start":110725,"byte_end":110740,"line_start":24,"line_end":24,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\security_context.rs","byte_start":111006,"byte_end":111021,"line_start":38,"line_end":38,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":617,"byte_end":627,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":637,"byte_end":649,"line_start":34,"line_end":34,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":659,"byte_end":669,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":679,"byte_end":688,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":256}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":698,"byte_end":708,"line_start":37,"line_end":37,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":263}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":745,"byte_end":755,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":349}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":765,"byte_end":775,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":351}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":785,"byte_end":798,"line_start":41,"line_end":41,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":358}},{"kind":"Mod","span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\lib.rs","byte_start":808,"byte_end":818,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2475,"byte_end":2491,"line_start":13,"line_end":13,"column_start":22,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2516,"byte_end":2532,"line_start":14,"line_end":14,"column_start":22,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":1535}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2552,"byte_end":2568,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":2164}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2764,"byte_end":2780,"line_start":25,"line_end":25,"column_start":15,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":2905,"byte_end":2921,"line_start":33,"line_end":33,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":4273,"byte_end":4282,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5426,"byte_end":5443,"line_start":115,"line_end":115,"column_start":23,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_chain.rs","byte_start":5780,"byte_end":5792,"line_start":131,"line_end":131,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":6510,"byte_end":6523,"line_start":23,"line_end":23,"column_start":6,"column_end":19},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7144,"byte_end":7155,"line_start":49,"line_end":49,"column_start":22,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7180,"byte_end":7191,"line_start":50,"line_end":50,"column_start":22,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":1535}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7210,"byte_end":7221,"line_start":52,"line_end":52,"column_start":15,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7358,"byte_end":7369,"line_start":60,"line_end":60,"column_start":16,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":2164}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":7553,"byte_end":7564,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":21631,"byte_end":21642,"line_start":422,"line_end":422,"column_start":20,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":2040}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":21926,"byte_end":21950,"line_start":434,"line_end":434,"column_start":10,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":24385,"byte_end":24399,"line_start":500,"line_end":500,"column_start":10,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_context.rs","byte_start":27751,"byte_end":27758,"line_start":594,"line_end":594,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30741,"byte_end":30750,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30775,"byte_end":30784,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1535}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30809,"byte_end":30818,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":30940,"byte_end":30949,"line_start":31,"line_end":31,"column_start":15,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":31077,"byte_end":31086,"line_start":39,"line_end":39,"column_start":16,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":189},"to":{"krate":2,"index":2164}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":34232,"byte_end":34241,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":40053,"byte_end":40058,"line_start":245,"line_end":245,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":3496}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":40892,"byte_end":40908,"line_start":277,"line_end":277,"column_start":6,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\cert_store.rs","byte_start":43105,"byte_end":43111,"line_start":335,"line_end":335,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_key.rs","byte_start":47588,"byte_end":47596,"line_start":7,"line_end":7,"column_start":15,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":258},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48069,"byte_end":48078,"line_start":15,"line_end":15,"column_start":15,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48243,"byte_end":48252,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":48604,"byte_end":48618,"line_start":42,"line_end":42,"column_start":6,"column_end":20},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":51470,"byte_end":51482,"line_start":124,"line_end":124,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\crypt_prov.rs","byte_start":52604,"byte_end":52617,"line_start":176,"line_end":176,"column_start":10,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":57984,"byte_end":57994,"line_start":24,"line_end":24,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":1535}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58019,"byte_end":58029,"line_start":25,"line_end":25,"column_start":22,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":1545}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58048,"byte_end":58058,"line_start":27,"line_end":27,"column_start":15,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58212,"byte_end":58222,"line_start":35,"line_end":35,"column_start":41,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":325},"to":{"krate":0,"index":596}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58491,"byte_end":58501,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ctl_context.rs","byte_start":58918,"byte_end":58925,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\ncrypt_key.rs","byte_start":63950,"byte_end":63959,"line_start":7,"line_end":7,"column_start":15,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":68029,"byte_end":68037,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":69156,"byte_end":69163,"line_start":141,"line_end":141,"column_start":6,"column_end":13},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73201,"byte_end":73213,"line_start":235,"line_end":235,"column_start":15,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73364,"byte_end":73376,"line_start":243,"line_end":243,"column_start":34,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":382},"to":{"krate":0,"index":596}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\schannel_cred.rs","byte_start":73636,"byte_end":73648,"line_start":257,"line_end":257,"column_start":6,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75103,"byte_end":75110,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":2189}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":75348,"byte_end":75355,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":82538,"byte_end":82558,"line_start":256,"line_end":256,"column_start":6,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":83375,"byte_end":83389,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":844},"to":{"krate":1,"index":1559}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":83860,"byte_end":83874,"line_start":296,"line_end":296,"column_start":44,"column_end":58},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":844},"to":{"krate":2,"index":7197}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84252,"byte_end":84261,"line_start":312,"line_end":312,"column_start":24,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":7192}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84472,"byte_end":84481,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":84889,"byte_end":84898,"line_start":339,"line_end":339,"column_start":9,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":106693,"byte_end":106714,"line_start":845,"line_end":845,"column_start":9,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":106991,"byte_end":107012,"line_start":857,"line_end":857,"column_start":9,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":107468,"byte_end":107477,"line_start":872,"line_end":872,"column_start":19,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":465},"to":{"krate":1,"index":2835}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":108585,"byte_end":108594,"line_start":903,"line_end":903,"column_start":18,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":465},"to":{"krate":1,"index":2781}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\tls_stream.rs","byte_start":108983,"byte_end":108992,"line_start":918,"line_end":918,"column_start":21,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":465},"to":{"krate":1,"index":2857}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\context_buffer.rs","byte_start":109848,"byte_end":109861,"line_start":7,"line_end":7,"column_start":15,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\context_buffer.rs","byte_start":109994,"byte_end":110007,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1704}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\security_context.rs","byte_start":110559,"byte_end":110574,"line_start":16,"line_end":16,"column_start":15,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":575},"to":{"krate":2,"index":1726}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\security_context.rs","byte_start":110725,"byte_end":110740,"line_start":24,"line_end":24,"column_start":34,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":575},"to":{"krate":0,"index":596}},{"span":{"file_name":"C:\\Users\\syaki\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\schannel-0.1.16\\src\\security_context.rs","byte_start":111006,"byte_end":111021,"line_start":38,"line_end":38,"column_start":6,"column_end":21},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}}]}